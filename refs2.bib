@inproceedings{Kikas2017,
abstract = {Software developers often include available open-source software packages into their projects to minimize redundant effort. However, adding a package to a project can also introduce risks, which can propagate through multiple levels of dependencies. Currently, not much is known about the structure of open-source package ecosystems of popular programming languages and the extent to which transitive bug propagation is possible. This paper analyzes the dependency network structure and evolution of the JavaScript, Ruby, and Rust ecosystems. The reported results reveal significant differences across language ecosystems. The results indicate that the number of transitive dependencies for JavaScript has grown 60{\%} over the last year, suggesting that developers should look more carefully into their dependencies to understand what exactly is included. The study also reveals that vulnerability to a removal of the most popular package is increasing, yet most other packages have a decreasing impact on vulnerability. The findings of this study can inform the development of dependency management tools.},
author = {Kikas, Riivo and Gousios, Georgios and Dumas, Marlon and Pfahl, Dietmar},
booktitle = {IEEE International Working Conference on Mining Software Repositories},
doi = {10.1109/MSR.2017.55},
isbn = {9781538615447},
issn = {21601860},
keywords = {Dependency Management,Mining Software Repositories,Software Ecosystems,Software Evolution},
title = {{Structure and evolution of package dependency networks}},
year = {2017}
}
